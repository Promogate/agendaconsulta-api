generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  name            String
  email           String   @unique
  passwordHash    String
  address         String?
  phone           String?
  isPhoneWhatsapp Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  @@map("users")
}

model Doctor {
  id               String   @id @default(cuid())
  first_name       String
  last_name        String
  email            String   @unique
  passwordHash     String
  crm              String?
  phone            String?
  is_phon_whatsapp Boolean  @default(false)
  specialties      String[]

  @@map("doctors")
}

model Specialization {
  id                  String @id @default(cuid())
  specialization_name String

  @@map("specializations")
}

model SpecializationOnDoctor {
  id                String @id @default(cuid())
  doctor_id         String
  specialization_id String

  @@unique([doctor_id, specialization_id])
  @@map("specialization_on_doctors")
}

model DoctorHospitalAffiliation {
  id          String   @id @default(cuid())
  doctor_id   String
  clinic_name String
  city        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("doctor_hospital_affiliation")
}

model Clinic {
  id                String   @id @default(cuid())
  name              String
  email             String   @unique
  phone             String
  address           String
  is_phone_whatsapp Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())

  @@map("clinics")
}

model ClinicDoctorAvailability {
  id           String   @id @default(cuid())
  clinic_id    String
  day_of_week  String
  start_time   DateTime
  end_time     DateTime
  is_available Boolean  @default(false)

  @@map("clinic_doctor_availatibilities")
}

model Appointment {
  id                 String            @id @default(cuid())
  user_id            String
  clinic_id          String
  start_time         DateTime
  appointment_status AppointmentStatus @default(PENDING)

  @@map("appointments")
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model ClientReview {
  id                   String   @id @default(cuid())
  user_id              String
  doctor_id            String
  is_review_anonymous  Boolean  @default(false)
  is_doctor_recommende Boolean  @default(true)
  rating               Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @default(now())

  @@map("user_reviews")
}
